trigger:
- main

pool:
<<<<<<< HEAD
  name: Default   # your self-hosted agent pool
=======
  name: Default  # your self-hosted agent pool

variables:
  azureSubscription: 'myserv'  # Azure DevOps Service Connection name
  webAppName: 'pythondeploy'       # Name of your Azure Web App
  resourceGroup: 'pythonR' # Resource Group of your Web App
  packagePath: '$(System.DefaultWorkingDirectory)'  # Path to deploy
>>>>>>> fcfb2269bb0a3860b4d676cc0b67b994b7c9c3e5

steps:
# 1️⃣ Verify Python installation
- script: |
    python --version
    where python
    pip --version
  displayName: 'Verify Python 3.12'

# 2️⃣ Upgrade pip and install dependencies
- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

<<<<<<< HEAD
# 3️⃣ Run tests with pytest
- script: |
    python -m pip install pytest pytest-azurepipelines
    python -m pytest
  displayName: 'Run tests'
=======
>>>>>>> fcfb2269bb0a3860b4d676cc0b67b994b7c9c3e5

# 4️⃣ Optional: Build Python package (only if setup.py exists)
- script: |
    if exist setup.py (
        python setup.py sdist bdist_wheel
    ) else (
        echo "setup.py not found, skipping package build"
    )
  displayName: 'Build Python package (optional)'

<<<<<<< HEAD
# 5️⃣ Optional: Publish package to PyPI (only if dist folder exists)
# - task: TwineAuthenticate@1
#   inputs:
#     artifactFeed: 'sand'
# - script: |
#     if exist dist (
#         pip install twine
#         twine upload dist/*
#     ) else (
#         echo "No dist folder found, skipping publish"
#     )
#   displayName: 'Publish package (optional)'
=======
# 5️⃣ Deploy to Azure Web App
- task: AzureWebApp@1
  inputs:
    azureSubscription: $(azureSubscription)
    appType: 'webApp'
    appName: $(webAppName)
    package: $(packagePath)
  displayName: 'Deploy to Azure Web App'
>>>>>>> fcfb2269bb0a3860b4d676cc0b67b994b7c9c3e5
